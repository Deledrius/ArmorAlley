/**
 * AA: Game UI
 */

@font-face {
  font-display: swap;
  /* https://www.jetbrains.com/lp/mono/ */
  font-family: JetBrains Mono;
  font-style: normal;
  font-weight: 400;
  /**
   * 50% file savings via character subsetting
   * https://documentation.platformos.com/best-practices/frontend-performance/optimizing-font-files
   */
  src: url(../font/JetBrainsMono/JetBrainsMono-Regular-subset.woff2)
    format('woff2');
  unicode-range: U+21, U+22, U+25-5F, U+61-7D;
}

@font-face {
  font-family: 'War Wound';
  src: url('../font/war-wound/WarWound-subset.woff2') format('woff2');
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}

body.is_safari:not(.is-mobile) #player-status-bar,
body.is_safari:not(.is-mobile) .sprite {
  /* Safari: given rasterization, keep things pixelated and sharp for sprites. */
  image-rendering: pixelated;
}

body.game-started {
  -webkit-touch-callout: none;
  /* prevent pinch-to-zoom and scroll */
  touch-action: none;
  /* on mobile especially, aggressively disable selection. this is a game, not a document. ;) */
  -webkit-user-select: none;
  user-select: none;
}

#game-status-bar.building {
  /* when inventory is being ordered */
  border-color: #fff;
}

/* nested in #player-status-bar */
#spinner {
  /* .mac-system-spinner */
  position: absolute;
  top: calc(-2.5px * var(--gs));
  left: 50%;
  transform: translate3d(-50%, -50%, 0) scale3d(1.25, 1.25, 1);
  width: calc(8px * var(--gs));
  height: calc(8px * var(--gs));
  z-index: 11;
  opacity: 0;
  transition: transform 0.5s ease-in-out, opacity 0.5s ease-in-out;
}

#spinner:not(.animating) {
  /* avoid invisible animations. */
  background: 0 0;
}

#spinner.active {
  opacity: 1;
  transform: translate3d(-50%, -50%, 0) scale3d(1, 1, 1);
}

#funds {
  position: absolute;
  top: calc(4px * var(--gs));
  left: calc(4px * var(--gs));
  width: calc(42px * var(--gs));
  /* collapse whitespace */
  font-size: 0px;
  opacity: 0;
}

body.game-started #funds {
  transition: opacity 0.25s ease-in-out;
  opacity: 1;
}

#funds .funds-label {
  font-size: calc(7px * var(--gs));
  line-height: calc(7px * var(--gs));
  /* space before digits */
  padding-right: calc(1.5px * var(--gs));
}

#game-fps {
  position: absolute;
  display: none;
  top: calc(4px * var(--gs));
  right: calc(4px * var(--gs));
  width: calc(64px * var(--gs));
  font-size: calc(5px * var(--gs));
  color: rgba(255, 255, 255, 0.25);
  text-align: right;
}

#funds,
#funds-count {
  vertical-align: top;
  color: #999;
}

#funds-count {
  position: relative;
  display: inline-block;
  image-rendering: optimizeQuality;
}

#funds-count .digit {
  color: transparent;
  display: inline-block;
  width: calc(4.25px * var(--gs));
  height: calc(8.5px * var(--gs));
  margin-top: calc(-0.55px * var(--gs));
  /* tighten "letter spacing" a bit */
  margin-right: calc(-0.33px * var(--gs));
  opacity: 1;
  overflow: hidden;
  padding: 0;
  position: relative;
  text-align: left;
  text-indent: 0;
  /* collapse / expand, 1 <-> 10 <-> 100 */
  transition: width 0.15s ease-in-out;
  vertical-align: top;
  white-space: nowrap;
}

#funds-count .digit.collapsed {
  opacity: 0;
  width: 0;
}

#funds-count .digit-wrapper {
  position: absolute;
  top: 0;
  left: 0;
  /**
   * source image: #000.
   * invert 80% -> #cc (216)
   * invert 60% -> #99 (153)
   */
  filter: invert(0.6);
  background: url(../image/number-strip-chicago.svg) 0 0/100% 1000% repeat-y;
  display: block;
  width: 100%;
  height: 100%;
  overflow: hidden;
  /* "rotating" number */
  transition: all calc(0.25s * var(--gs-frac)) ease-in-out;
  transition-property: margin, background-position;
  image-rendering: optimizeQuality;
}

#funds-count.no-transition .digit-wrapper {
  transition: none;
}

#queue {
  /* collapse whitespace */
  font-size: 0;
  top: 0;
  left: 1%;
  position: absolute;
  vertical-align: top;
  white-space: nowrap;
}

#queue .progress {
  background: #39f;
  bottom: -1px;
  height: 1px;
  left: 0;
  position: absolute;
  width: 100%;
}

#queue .queue-item {
  background: 0 0;
  color: #ccc;
  display: inline-block;
  filter: grayscale(1) blur(8px);
  font-family: JetBrains Mono, SF Mono, Lucida Console, Terminal, Monaco,
    monospace;
  height: 22px;
  margin-right: 0;
  margin-top: 15px;
  opacity: 0;
  padding-right: 1px;
  position: relative;
  transition: 0.25s ease-out;
  transition-property: width, margin, opacity, filter, transform;
  vertical-align: top;
  /* small letter, e.g., "T" for "Tank" */
  min-width: 1em;
}

#queue .queue-item.queued {
  filter: grayscale(1) blur(0);
  margin-top: 0;
  opacity: 0.66;
}

#queue .queue-item.building {
  filter: grayscale(0) blur(0);
  opacity: 1;
}

#queue .queue-item.complete {
  color: #999;
  filter: grayscale(0);
}

#queue .queue-item.complete .counter {
  filter: grayscale(1);
}

#queue .queue-item.collapsing {
  filter: grayscale(0) blur(8px);
  opacity: 0;
  /* faster */
  transition-duration: 0.33s;
  transition-timing-function: ease-in;
}

#queue .queue-item .counter {
  display: inline-block;
  font-size: calc(4px * var(--gs));
  font-size: calc(4px * var(--gs));
  margin-top: -60%;
  opacity: 0;
  position: absolute;
  left: 0;
  text-align: center;
  min-width: 1em;
  text-shadow: 0 1px 0 #000;
  top: 0;
  transform: scale(1);
  transition: opacity 175ms ease-in-out, filter 175ms ease-in-out;
}

#queue .queue-item.over-ten .counter {
  margin-right: 0;
}

#queue .queue-item.has-counter .counter {
  opacity: 1;
}

#radar-scrubber {
  background: rgba(0, 255, 0, 0.5);
  border: 0.5px solid #393;
  border-bottom: none;
  border-top: none;
  box-sizing: border-box;
  cursor: grab;
  left: 0;
  opacity: 0.5;
  position: absolute;
  /* sit atop the fuel line */
  top: 35px;
  width: 32px;
  height: 6px;
  z-index: 99;
}

#radar-scrubber:hover {
  opacity: 0.65;
}

#radar-scrubber.active {
  cursor: grabbing;
  opacity: 0.75;
}

body.game-over.radar_enhanced_fx #radar-jammed-overlay .noise {
  opacity: 0.25;
}

#radar-jammed-overlay.static .noise {
  animation: none !important;
  background: rgba(0, 48, 0, 0.45) !important;
}

body.game-paused #radar-jammed-overlay.active .noise {
  animation: none;
}

body.demo #game-tips,
body.demo #help,
body.demo #home-video-wrapper,
body.demo #logo,
body.demo #notification-toasts,
body.demo #queue,
body.demo #radar,
body.demo #stats-bar {
  display: none !important;
}

body.demo #radar-jammed-overlay {
  /* don't animate in radar area, waste of video bitrate :P */
  top: 8%;
}

body.demo .target-marker {
  opacity: 0;
}

#player-status-bar {
  color: #999;
  font-size: 55%;
  /* and room for green bars */
  height: calc(48px * var(--gs));
  left: 0;
  /* so type lines up */
  line-height: 50%;
  /* previously, 24px */
  position: absolute;
  text-align: center;
  text-shadow: 0 1px 0 #000;
  top: calc(34px * var(--gs));
  width: 100%;
}

#player-status-bar .radar-scroller {
  position: absolute;
  top: calc(1.75px * var(--gs));
  left: 0;
  box-sizing: border-box;
  width: 0;
  height: calc(5.5px * var(--gs));
  border: calc(0.5px * var(--gs)) solid rgba(255, 255, 255, 0.1);
  border-radius: calc(1.5px * var(--gs));
  background-color: rgba(255, 255, 255, 0.1);
}

#player-status-bar .radar-scroller.higher-visibility {
  border-color: #393;
  background-color: rgba(32, 192, 32, 0.33);
}

@media screen and (orientation: landscape) and (max-height: 480px) {
  /* landscape + small screens, probably mobile */
  #player-status-bar .radar-scroller {
    border-color: #393;
    background-color: rgba(32, 192, 32, 0.33);
    /* square off the corners. */
    border-radius: 0;
  }
}

@media screen and (orientation: portrait) and (max-height: 840px) {
  /* up to iPhone 15 Pro Max, at least? */
  #player-status-bar .radar-scroller {
    border-radius: 0;
  }
}

#top-bar li {
  display: inline-block;
}

#fuel-bar {
  background-image: repeating-linear-gradient(
    -55deg,
    rgba(255, 255, 255, 0),
    rgba(255, 255, 255, 0) 1.5px,
    rgba(255, 255, 255, 0.2) 1.5px,
    rgba(255, 255, 255, 0.2) 2.25px,
    rgba(255, 255, 255, 0.2) 2.25px,
    rgba(255, 255, 255, 0) 3px
  );
  opacity: 0;
}

body.loaded #fuel-bar {
  transition: opacity 0.25s ease-in-out;
}

body.game-started #fuel-bar {
  opacity: 1;
}

#fuel-line {
  background-image: repeating-linear-gradient(
    -55deg,
    rgba(255, 0, 0, 0),
    rgba(255, 0, 0, 0) 1.5px,
    #c00000 1.5px,
    #c00000 2.25px,
    #c00000 2.25px,
    rgba(255, 0, 0, 0) 3px
  );
  image-rendering: optimizeQuality;
  image-rendering: crisp-edges;
  image-rendering: -webkit-optimize-contrast;
  /* hide at first */
  transform: translate3d(-100%, 0, 0);
}

#fuel-bar,
#fuel-line {
  position: absolute;
  top: calc(2px * var(--gs));
  height: calc(5px * var(--gs));
  overflow: hidden;
  width: 100%;
}

#fuel-line,
#repair-complete {
  left: 0;
  position: absolute;
}

#repair-complete {
  background: url(../image/status-repair-complete.png) 0 0 / contain repeat-x;
  display: none;
  height: calc(13px * var(--gs));
  top: calc(33px * var(--gs));
  width: 100%;
  z-index: 1;
}

#stats-bar {
  position: relative;
  padding: 0;
  /* account for absolutely-positioned fuel line + bar */
  top: calc(10px * var(--gs));
  opacity: 0;
}

body.loaded #stats-bar {
  transition: opacity 0.5s ease-in-out;
}

body.game-started #stats-bar {
  opacity: 1;
}

ul.stats-bar {
  /* whitespace hack */
  font-size: 0;
}

ul.stats-bar li {
  color: #ccc;
  font-size: calc(7px * var(--gs));
  position: relative;
  text-align: left;
}

ul.stats-bar li.inventory-item:not(:last-of-type),
ul.stats-bar li.stats-item:not(:last-of-type) {
  /* annoying, but need to override #aa rules */
  padding-right: calc(8px * var(--gs)) !important;
}

#stats-bar.hide-inventory li.inventory-item,
#stats-bar.hide-keyboard-labels .letter-block,
#stats-bar.hide-weapons-status .stats-item,
#status-bar.hide-keyboard-labels .letter-block,
body.is_iphone #stats-bar .letter-block,
body.is_iphone #status-bar .letter-block {
  /* user has chosen to hide via game prefs */
  /* NOTE: #stats-bar and #status-bar are both valid. :P */
  display: none;
}

#stats-bar.hide-keyboard-labels li {
  /* balance things nicely, since the variable-width labels are gone. */
  text-align: center;
}

#stats-bar.hide-keyboard-labels li .weapon-count {
  /* tighten up spacing on numbers, items will be spaced out more here */
  margin-left: 0;
}

#stats-bar.hide-keyboard-labels li.inventory-item:not(:last-of-type),
#stats-bar.hide-keyboard-labels li.stats-item:not(:last-of-type) {
  /* ugh, one more override. */
  padding-right: 12px !important;
}

ul.stats-bar li.stats-item .weapon-count {
  display: inline-block;
  margin-left: calc(0.075rem * var(--gs));
  /* prevent a shift when as number counts change (for variable-width fonts) */
  min-width: calc(0.65rem * var(--gs));
}

body.is_safari:not(.is-mobile) #ammo-count {
  /* fix shifting on Safari, especially, with three digits in tutorial mode. */
  min-width: calc(11px * var(--gs));
}

body.is_safari:not(.is-mobile) #bomb-count {
  min-width: calc(9px * var(--gs));
}

#mobile-controls li.inventory-item,
#mobile-controls li.weapons-item,
ul.stats-bar li.stats-item .wrapper {
  filter: grayscale(0);
  transition: filter 0.33s ease-out, opacity 0.33s ease-out;
}

ul.stats-bar li.stats-item.weapon-unavailable:not(.repairing) .wrapper {
  filter: grayscale(1);
  opacity: 0.5;
}

#mobile-controls li.weapons-item.missiles:not(.weapon-unavailable),
ul.stats-bar li.stats-item.missiles:not(.weapon-unavailable) .wrapper {
  /* no transition while switching to/from reloading state. */
  transition: none;
}

#mobile-controls li.weapons-item.weapon-reloading,
ul.stats-bar li.stats-item.weapon-reloading:not(.repairing) em {
  /* fade the missile icon while "reloading" */
  opacity: 0.75;
}

ul.stats-bar li .double-wide {
  display: inline-block;
  min-width: calc(
    0.825rem * var(--gs)
  ); /* prevent 3 to 2 characters from causing UI shift. */
}

ul.stats-bar li.repairing em {
  animation: 0.5s ease-in-out infinite alternate sorta-blink;
}

ul.stats-bar em {
  display: inline-block;
  /* hide inner text */
  overflow: hidden;
  position: relative;
  font-size: 0px;
  vertical-align: middle;
  /* scaling shenanigans - TODO: clean up. */
  zoom: var(--gs);
}

ul.stats-bar .lives em {
  background: url(../image/status-helicopter.png) no-repeat;
  height: 7px;
  margin-left: 0.5em;
  width: 15px;
}

ul.stats-bar .infantry-count {
  background: 0 0 !important;
}

#mobile-controls li.weapons-item a.parachute-infantry,
.static-sprite.parachute-infantry,
ul.stats-bar .infantry-count em {
  background: url(../image/parachute-infantry-static.png) no-repeat;
}

#mobile-controls.enemy li.weapons-item a.parachute-infantry,
#player-status-bar.enemy .infantry-count em {
  background: url(../image/parachute-infantry-enemy-static.png) 0 0 / contain
    no-repeat;
}

ul.stats-bar .infantry-count em {
  background-repeat: no-repeat;
  /* background: transparent url(../image/parachute-infantry-static.png) no-repeat 0px 0px; */
  background-size: contain;
  height: 13px;
  margin-right: 3px;
  margin-top: -3px;
  transform-origin: left;
  width: 9px;
}

/* hackish: min-width fix for pixel shift from 1/0. Ugh. */
#infantry-count {
  display: inline-block;
  min-width: calc(0.25rem * var(--gs));
}

ul.stats-bar .missiles em {
  height: 9px;
  min-width: 16px;
  /* accommodate rubber chicken mode */
  transform: rotate(-5deg);
  width: 10px;
}

ul.stats-bar .missiles span.divider {
  /* X|C|B */
  display: inline-block;
  min-width: calc(0.5rem * var(--gs));
  opacity: 0.25;
  text-align: center;
}

#mobile-controls li.weapons-item a.smart-missile,
ul.stats-bar .missiles em {
  background-image: url(../image/smart-missile.png);
  background-position: 50% 50%;
  background-repeat: no-repeat;
  background-size: 75%;
}

#mobile-controls li.weapons-item a.ammo,
ul.stats-bar .ammo em {
  background-image: url(../image/status-ammo.png);
  background-position: 2px 1px;
  background-repeat: no-repeat;
  background-size: 80%;
}

ul.stats-bar .ammo em {
  height: 9px;
  width: 14px;
}

#mobile-controls li.weapons-item a.bombs,
ul.stats-bar .bombs em {
  background: url(../image/status-bombs.png) 50% 1px/75% no-repeat;
}

ul.stats-bar .bombs em {
  height: 11px;
  margin-left: 1px;
  text-indent: -32px;
  width: 3px;
}

.sprite {
  background-position: 0 0;
  background-repeat: no-repeat;
  bottom: 0;
  left: 0;
  overflow: hidden;
  -moz-pointer-events: none;
  pointer-events: none;
  position: absolute;
}

/* bunkers go green when overlapping with ground units, i.e., tanks? */
/* all terrain items need acceleration? */
#fuel-line,
#radar .radar-item--animated,
#radar .sprite.cloud1,
#radar .sprite.cloud2,
#radar .sprite.cloud3,
.cornholio,
.radar-scroller,
.sprite.balloon,
.sprite.bunker,
.sprite.chain,
.sprite.cloud1,
.sprite.cloud2,
.sprite.cloud3,
.sprite.end-bunker,
.sprite.gunfire,
.sprite.missile-launcher,
.sprite.shrapnel,
.sprite.smart-missile,
.sprite.super-bunker,
.sprite.terrain-item,
.sprite.van,
.turret .sub-sprite {
  /**
   * 09/2021: Chrome may benefit from explicit "layer" promotion, per dev tools.
   * Here, green paint flashing (and thus, performance) is notably improved
   * by carefully applying `will-change` to a number of common elements.
   * https://developer.mozilla.org/en-US/docs/Web/CSS/will-change
   */
  will-change: transform;
  contain: strict;
}

/* firefox complains if we have too many elements using will-change. */
.radar-item:not(.radar-item--animated),
body.is_firefox #radar .radar-item--animated {
  will-change: unset;
}

.transform-sprite {
  left: 0;
  position: absolute;
  top: 0;
}

/* note: only apply to armed smart missiles - otherwise, positioning gets messed up. */
.sprite.balloon,
.sprite.bunker,
.sprite.chain,
.sprite.engineer,
.sprite.infantry,
.sprite.missile-launcher,
.sprite.smart-missile.armed,
.sprite.super-bunker,
.sprite.tank,
.sprite.van,
.turret .sub-sprite {
  /* for .smart-missile-tracking filter */
  transition: filter 1s cubic-bezier(0.45, 0.48, 0.25, 1.57);
}

#battlefield .sprite.helicopter {
  transition: filter 1s cubic-bezier(0.45, 0.48, 0.25, 1.57),
    opacity 0.5s ease-in-out;
}

/* hide GPU-accelerated, transform-based animated sprites when exploding. */
.sprite.exploding .transform-sprite {
  display: none;
}

body.is_safari:not(.is-mobile) .radar-item.bunker {
  margin-top: -2px;
}

.bunker,
.bunker.enemy {
  background-image: url(../image/bunker_mac.png);
  background-size: contain;
  height: 25.5px;
  width: 52px;
  z-index: 1; /* sit on top of chains. */
}

#battlefield.snow .bunker:not(.exploding):not(.burning):not(.dead) {
  background-image: url(../image/bunker_mac_snow.png);
  background-size: contain;
}

/* default / .bunker.facing-right case */
.bunker .sub-sprite.arrow,
.super-bunker .sub-sprite.arrow {
  background-image: url(../image/arrow-right.png);
  height: 10px;
  left: 38px;
  position: absolute;
  top: 8px;
  transition: transform 0.5s ease-in-out;
  width: 6px;
}

.super-bunker .sub-sprite.arrow {
  top: 6px;
  left: 50px;
}

.bunker.facing-left .sub-sprite.arrow,
.super-bunker.facing-left .sub-sprite.arrow {
  transform: rotate3d(0, 0, 1, -180deg);
}

.super-bunker.hostile .sub-sprite.arrow {
  transform: rotate3d(0, 0, 1, -90deg);
}

.bunker.burning .sub-sprite.arrow,
.bunker.exploding .sub-sprite.arrow {
  display: none;
}

.balloon {
  background-image: url(../image/balloon_mac.png);
  /* initially, show neutral */
  background-size: 38px 144px;
  /* 76 x 288 source image */
  height: 16px;
  /* allow status bar to hang out a bit */
  overflow: visible;
  width: 38px;
  z-index: 2;
}

/* alignment / centering tweaks while on bunker w/chain */
#battlefield .balloon.facing-left:not(.exploding) {
  margin-left: 1.5px;
}

#battlefield .balloon.facing-right:not(.exploding) {
  margin-left: -2.65px;
}

#battlefield.snow .balloon:not(.exploding):not(.dead) {
  background-image: url(../image/balloon_mac_snow.png);
}

.balloon,
.balloon.facing-right {
  background-position: 0 -128px; /* original yellow version: 0px -120px */
}

.balloon.animating {
  transition: margin 0.8s linear;
}

.balloon.facing-right.animating {
  animation: balloonright calc(0.8s * var(--gs-frac)) steps(8);
}

.balloon.facing-left {
  background-position: 0 0; /* default when animation finishes */
}

.balloon.facing-left.animating {
  animation: balloonleft calc(0.8s * var(--gs-frac)) steps(8);
}

.generic-explosion,
.generic-explosion-2 {
  /* default when animation finishes */
  animation: genericexplosionsmall calc(0.5s * var(--gs-frac)) steps(4);
  /* give the first frame a little more time */
  animation-delay: 75ms;
  /* stay at the last frame, when animation finishes */
  animation-fill-mode: forwards;
  background-image: url(../image/generic-explosion.png);
  /* full-width, and 5x height for the five frames */
  background-size: 100% 500%;
  filter: drop-shadow(0 0 calc(2px * var(--gs)) #cc3333);
}

@keyframes classic-explosion {
  from {
    transform: translate3d(0, 0, 0);
  }

  to {
    transform: translate3d(0, -100%, 0);
  }
}

.generic-explosion-2 {
  background-image: url(../image/generic-explosion-2.png);
}

.balloon.dead,
.generic-explosion .sub-sprite,
.generic-explosion-2 .sub-sprite {
  display: none;
}

.sprite.dead {
  background-image: none;
}

.chain {
  /**
   * height will be set / reset by JS.
   * element is moved via transform and is effectively fixed-height when active.
   * height is only zeroed when chain is at bottom - detached from balloon and/or bunker.
   */
  height: 0;
  top: 0;
  width: 2.5px;
  background-image: repeating-linear-gradient(
    -33deg,
    rgba(255, 255, 255, 0),
    rgba(255, 255, 255, 0) 0.5px,
    rgba(255, 255, 255, 0.33) 0.5px,
    rgba(255, 255, 255, 0.33) 1px,
    rgba(255, 255, 255, 0.33) 1px,
    rgba(255, 255, 255, 0) 1.5px
  );
}

body.is_safari:not(.is-mobile) .chain {
  /* tweak for desktop Safari, likely due to scaling. */
  background-image: repeating-linear-gradient(
    -33deg,
    rgba(255, 255, 255, 0),
    rgba(255, 255, 255, 0.33) 0.5px,
    rgba(255, 255, 255, 0.33) 0.5px,
    rgba(255, 255, 255, 0.33) 1px,
    rgba(255, 255, 255, 0.33) 1.5px,
    rgba(255, 255, 255, 0) 2px
  );
}

.missile-launcher {
  background-image: url(../image/missile-launcher.png);
  height: 18px;
  width: 54px;
  z-index: 2;
}

.missile-launcher,
.missile-launcher.enemy {
  background-repeat: no-repeat;
  background-size: 54px 72px;
}

.missile-launcher.enemy {
  background-image: url(../image/missile-launcher-enemy.png);
}

.tank,
.tank.enemy {
  background-image: none;
  height: 19px;
  width: 58px;
  z-index: 2;
}

.tank .transform-sprite {
  background-image: url(../image/tank-sprite-horizontal.png);
  background-size: 174px 18px;
  /* 58px x 3 frames */
  height: 18px;
  width: 174px;
}

.tank .transform-sprite,
.tank.enemy .transform-sprite {
  animation: animate-transform-sprite-tank calc(0.1s * var(--gs-frac)) steps(3)
    infinite;
}

.tank.enemy .transform-sprite {
  background-image: url(../image/tank-enemy-sprite-horizontal.png);
}

.tank.stopped .transform-sprite {
  /* show only one frame. */
  animation: none;
}

.van,
.van.enemy {
  background-image: url(../image/van.png);
  background-size: 38px 48px;
  /* retina sprite, 76 x 96 -> 36 x (16px * 3) - vertical sprite */
  height: 16px;
  width: 38px;
  z-index: 2;
}

.van.enemy {
  background-image: url(../image/van-enemy.png);
}

.engineer,
.infantry {
  height: 11px;
  overflow: hidden;
  width: 11px;
  z-index: 3; /* on top of helicopter, bunkers etc. */
}

.infantry .transform-sprite {
  /* NOTE: sprite is backwards in sequence. reverse restores proper order. */
  animation: animate-transform-sprite-infantry calc(0.4s * var(--gs-frac))
    steps(5) infinite reverse;
  background-image: url(../image/infantry-sprite-horizontal.png);
  background-size: 55px 11px;
  height: 11px;
  position: absolute;
  width: 55px;
}

.infantry.enemy .transform-sprite {
  /* proper L -> R order, in this case. */
  animation: animate-transform-sprite-infantry calc(0.4s * var(--gs-frac))
    steps(5) infinite;
  background-image: url(../image/infantry-enemy-sprite-horizontal.png);
}

.infantry.stopped {
  background-image: url(../image/infantry-static.png);
  background-repeat: no-repeat;
  background-size: 10px 12px;
}

.infantry.stopped .transform-sprite {
  animation: none;
  display: none;
}

.infantry.enemy.stopped {
  background-image: url(../image/infantry-enemy-static.png);
  background-repeat: no-repeat;
  background-size: 10px 12px;
}

.engineer {
  width: 10px; /* slightly smaller than infantry. */
}

.engineer .transform-sprite {
  animation: animate-transform-sprite-engineer calc(0.4s * var(--gs-frac))
    steps(5) infinite;
  background-image: url(../image/engineer-sprite-horizontal.png);
  background-size: 50px 11px;
  height: 11px;
  width: 50px;
}

.sprite.engineer:not(.enemy).building {
  margin-top: 23px;
}

.engineer.stopped {
  background-image: none;
}

.engineer.stopped .transform-sprite {
  animation: none;
  display: block;
}

.engineer.enemy .transform-sprite {
  background-image: url(../image/engineer-enemy-sprite-horizontal.png);
}

.parachute-infantry,
.parachute-infantry .transform-sprite {
  /* shorter until parachute is deployed. */
  height: 11px;
  width: 14px;
  /* ensure they display in front of bunkers. */
  z-index: 2;
}

.parachute-infantry .transform-sprite {
  background-image: url(../image/parachute-infantry.png);
  background-position: 0 -60px;
  background-size: 14px 100px;
}

.parachute-infantry.enemy .transform-sprite {
  background-image: url(../image/parachute-infantry-enemy.png);
}

.parachute-infantry.parachute-open,
.parachute-infantry.parachute-open .transform-sprite {
  height: 19px;
}

.parachute-infantry.parachute-open .transform-sprite {
  animation: parachute-swing calc(1s * var(--gs-frac)) ease-in-out infinite
    alternate;
  background-position: 0 0;
}

/* applied to sprites being actively targeted / tracked - excluding radar item sprites */
.smart-missile-tracking-active:not(.radar-item):after,
.smart-missile-tracking-removal:not(.radar-item):after,
.smart-missile-tracking:not(.radar-item):after {
  /* similar to .target-dot */
  content: '';
  font-size: 0px;
  opacity: 1;
  position: absolute;
  background: #c00;
  border: 0.5px solid #000;
  border-radius: 3px;
  width: 3px;
  height: 3px;
  top: -0.5px;
  right: -0.5px;
  z-index: 4;
}

.smart-missile-tracking .target-dot {
  /* hide larger dot while the other is actively blinking. */
  visibility: hidden;
}

.sprite:not(.balloon).exploding.smart-missile-tracking-active:not(
    .radar-item
  ):after,
.sprite:not(.balloon).exploding.smart-missile-tracking-removal:not(
    .radar-item
  ):after,
.sprite:not(.balloon).exploding.smart-missile-tracking:not(.radar-item):after {
  /* reposition so tracking dot stays in the right place - bunker is normally 25px in height */
  bottom: 0;
  top: auto;
}

.next-missile-target {
  /* halo around potential targets */
  filter: drop-shadow(0 0 calc(2px * var(--gs)) #999);
}

.smart-missile-tracking {
  filter: drop-shadow(0 0 calc(2px * var(--gs)) #ff3333);
}

.smart-missile-tracking:not(.turret):not(.parachute-infantry) {
  /**
   * Turn "hot" fast, with a few exceptions -
   * Turrets and parachute infantry need to keep
   * their own timings for animation / transitions.
   */
  transition-duration: 0.25s;
}

.smart-missile-tracking-active:after {
  animation: blink calc(0.33s * var(--gs-frac)) none infinite;
}

.smart-missile-tracking-removal:after,
.smart-missile-tracking-removal:not(.radar-item):after {
  animation: drop-in calc(0.33s * var(--gs-frac)) ease-in-out reverse;
  /* final state once animation finishes */
  opacity: 0;
}

.smart-missile.smart-missile-tracking:after {
  animation: drop-in-small calc(0.25s * var(--gs-frac)) ease-out;
  transform: translate3d(-50%, -50%, 0) scale3d(0.5, 0.5, 1);
}

.radar-item.smart-missile-tracking-active {
  animation: blink calc(0.25s * var(--gs-frac)) infinite;
}

/* special case: avoid affecting display of child nodes */
.radar-item.turret.smart-missile-tracking-active {
  animation: blink-tracking-color calc(0.25s * var(--gs-frac)) infinite;
}

.radar-item.smart-missile-tracking-active:not(.helicopter):not(.turret) {
  /* make the missile target obvious on the radar. */
  /* helicopters are a special border-only case. */
  background-color: red !important;
  border-color: red !important;
}

.radar-item.helicopter:not(.enemy).smart-missile-tracking-active {
  /* player's helicopter */
  border-left-color: red !important;
}

.radar-item.helicopter.enemy.smart-missile-tracking-active {
  /* enemy helicopter */
  border-right-color: red !important;
}

.engineer.enemy.exploding,
.infantry.enemy.exploding,
.left-arrow-sign,
.missile-launcher.enemy.exploding,
.tank .sub-sprite,
.tank.enemy.exploding,
.van.enemy.exploding {
  /* horizontal flip tricks */
  filter: FlipH;
  transform: scaleX(-1);
}

.engineer.enemy.exploding,
.infantry.enemy.exploding {
  /* stupid display fix */
  height: 22px !important;
}

.tank.enemy .sub-sprite {
  /* no flip in certain cases */
  filter: unset;
  transform: none;
}

.helicopter {
  /* cloaking opacity effect */
  opacity: 1;
  top: 0;
  transition: opacity 0.25s ease-in-out;
}

.helicopter.respawning .transform-sprite {
  top: 15px;
}

#world.welcome .helicopter.respawning-active .transform-sprite,
.helicopter.respawning-active .transform-sprite {
  top: 0;
  transition: all calc(1.5s * var(--gs-frac)) ease-in-out;
  /* filter: blur() may be applied during game start */
  transition-property: top, filter;
}

.helicopter.flipped-left,
.helicopter.flipped-right {
  animation: flipleft calc(0.33s * var(--gs-frac)) steps(3);
  background-image: url(../image/helicopter-rotating.png) !important;
  background-size: 50px 60px;
  width: 50px;
  height: 20px;
}

.helicopter.flipped-left .transform-sprite,
.helicopter.flipped-right .transform-sprite {
  /* hide while rotating */
  display: none;
}

.helicopter.flipped-left.enemy,
.helicopter.flipped-right.enemy {
  /* hack for enemy case */
  background-image: url(../image/helicopter-rotating-enemy.png) !important;
}

.helicopter.flipped-left.enemy,
.helicopter.flipped-right {
  /* backwards */
  animation: flipright calc(0.33s * var(--gs-frac)) steps(3);
}

.helicopter.flipped-right.enemy {
  /* backwards */
  animation: flipleft calc(0.33s * var(--gs-frac)) steps(3);
}

.helicopter.cloaked {
  opacity: 0.33;
}

#radar .helicopter.cloaked {
  visibility: hidden;
}

.helicopter.enemy,
.helicopter.enemy.facing-left,
.helicopter.enemy.facing-right {
  height: 18px;
  overflow: hidden;
  width: 55px;
}

.helicopter.enemy .transform-sprite {
  animation: animate-transform-sprite-helicopter-enemy
    calc(0.52s * var(--gs-frac)) steps(4) infinite;
  background-image: url(../image/helicopter-enemy-sprite-horizontal.png);
  background-size: 220px 18px;
  height: 18px;
  width: 220px;
}

.helicopter.enemy.facing-left .transform-sprite {
  /* updated sprite */
  background-image: url(../image/helicopter-enemy-sprite-horizontal-facing-right.png);
}

.helicopter.dead {
  display: none;
}

.gunfire {
  background-color: #9c9f08;
  border-radius: 100%;
  height: 1.5px;
  left: 0;
  position: absolute;
  top: 0;
  width: 2px;
  z-index: 2;
}

#battlefield .gunfire {
  margin-top: -0.75px;
  margin-left: -1px;
}

#radar .gunfire.expired {
  background-color: #555;
}

.gunfire.welding-spark {
  background-color: #c90;
}

.smart-missile {
  background-image: url(../image/smart-missile.png);
  background-position: 0 0;
  background-repeat: no-repeat;
  background-size: 15px 4px;
  height: 4px;
  opacity: 1;
  position: absolute;
  /* a little transition on missile direction changes, as vX/vY can be pretty much immediate */
  width: 15px;
}

#battlefield .smart-missile:not(.armed),
.smart-missile.expired {
  animation: blink calc(0.125s * var(--gs-frac)) infinite;
  /* blink initially, until armed - and when expired */
  transition-property: filter, transform, opacity;
}

.smart-missile.rubber-chicken {
  /* heh */
  background: url(../image/rubber-chicken.gif) 50% 50% / contain no-repeat;
  height: 12px;
  width: 24px;
}

body.rubber-chicken-mode #mobile-controls li.weapons-item a.smart-missile,
body.rubber-chicken-mode ul.stats-bar .missiles em {
  background: url(../image/rubber-chicken-static.png) 50% 33%/16px 4.5px
    no-repeat;
  min-width: 16px;
}

body.banana-mode #mobile-controls li.weapons-item a.smart-missile,
body.banana-mode ul.stats-bar .missiles em,
.smart-missile.banana {
  background: url(../image/banana.png) 50% 0 / contain no-repeat; /* https://www.shutterstock.com/image-vector/set-cartoon-banana-drawings-single-peeled-1205236333 */
}

body.banana-mode ul.stats-bar .missiles em {
  /* background: transparent url(../image/banana.png) 50% 0px no-repeat; */
  margin-top: -2px; /* height align tweak */
}

body.original_missile_mode ul.stats-bar .missiles .alternate-missiles,
body.original_missile_mode ul.stats-bar .missiles .divider {
  /* hide |C|B in UI when "alternate missiles" are disabled. */
  display: none !important;
}

.smart-missile.banana {
  background-position: 50% 50%;
  height: 15px;
  width: 12px;
}

.smart-missile.spark {
  border: none;
}

.helicopter-trailer,
.smart-missile-trailer {
  background-color: #9c9f08;
  height: 1px;
  position: absolute;
  transition: opacity 0.5s ease-in-out;
  width: 1px;
}

.helicopter-trailer {
  background-color: #666;
}

.base {
  height: 26px;
  overflow: hidden;
  /* +1 pixel, sprite clipping workaround */
  width: 104px;
}

.base .transform-sprite {
  animation: animate-transform-sprite-base calc(1s * var(--gs-frac)) steps(5)
    infinite alternate;
  background-image: url(../image/base-sprite-horizontal.png);
  background-size: 100% 100%;
  height: 26px;
  width: 520px;
}

#battlefield.snow .base .transform-sprite {
  animation: animate-transform-sprite-base-snow calc(1s * var(--gs-frac))
    steps(5) infinite alternate;
  background-image: url(../image/base-sprite-horizontal-snow.png);
  background-size: 100% 100%;
  height: 25px;
  width: 510px;
}

.base.enemy .transform-sprite {
  background-image: url(../image/base-enemy-sprite-horizontal.png);
}

#battlefield.snow .base.enemy .transform-sprite {
  background-image: url(../image/base-enemy-sprite-horizontal_snow.png);
}

#battlefield .base.burning .transform-sprite {
  animation: animate-transform-sprite-base-burning calc(0.75s * var(--gs-frac))
    steps(4) infinite;
  background-image: url(../image/base-sprite-horizontal_burning.png);
  background-size: 408px 16px;
  width: 408px;
  height: 16px;
  top: auto;
  bottom: 0;
}

.end-bunker {
  background-image: url(../image/end-bunker.png);
  background-size: contain;
  height: 19px;
  width: 41px;
}

#battlefield.snow .end-bunker {
  /* snow version */
  background-image: url(../image/end-bunker_snow.png);
  margin-bottom: -0.5px;
}

.end-bunker.enemy {
  background-image: url(../image/end-bunker-enemy.png);
}

#battlefield.snow .end-bunker.enemy {
  background-image: url(../image/end-bunker-enemy_snow.png);
}

.super-bunker {
  /* background-image: url(../image/super-bunker.png); */
  background-image: url(../image/super-bunker_mac.png);
  background-size: contain;
  height: 28px;
  width: 66px;
}

#battlefield.snow .super-bunker {
  /* snow version */
  background-image: url(../image/super-bunker_mac_snow.png);
  background-size: contain;
}

.barb-wire {
  background-image: url(../image/barb-wire.png);
  height: 11px;
  width: 18px;
}

.barb-wire,
.cactus {
  background-size: contain;
}

.cactus {
  background-image: url(../image/cactus.png);
  height: 17px;
  width: 12px;
}

.cactus2 {
  background-image: url(../image/cactus2.png);
  background-size: contain;
  height: 25px;
  width: 18px;
}

.landing-pad {
  height: 7px;
  overflow: hidden;
  width: 81px;
  /* cover all ground units */
  z-index: 5;
}

.landing-pad .transform-sprite {
  animation: animate-transform-sprite-landing-pad calc(1s * var(--gs-frac))
    steps(4) infinite;
  background-image: url(../image/landing-pad-sprite-horizontal.png);
  height: 7px;
  width: 324px;
}

.sand-dune {
  background-image: url(../image/sand-dune.png);
  height: 8px;
  width: 51px;
}

.sand-dunes {
  background-image: url(../image/sand-dunes.png);
  height: 11px;
  width: 73px;
}

.checkmark-grass {
  background-image: url(../image/checkmark-grass.png);
  height: 10px;
  width: 15px;
}

.flower {
  background-image: url(../image/flower.png);
  height: 8px;
  width: 11px;
}

.flowers {
  background-image: url(../image/flowers.png);
  height: 11px;
  width: 34px;
}

.flower-bush {
  background-image: url(../image/flower-bush.png);
  height: 13px;
  width: 18px;
}

.tree {
  background-image: url(../image/tree.png);
  height: 27px;
  width: 26px;
}

.tumbleweed {
  background-image: url(../image/tumbleweed.png);
  height: 15px;
  width: 18px;
}

#battlefield.snow .tree {
  background-image: url(../image/tree_snow.png);
}

.palm-tree {
  background-image: url(../image/palm-tree.png);
  height: 22px;
  width: 18px;
}

.rock {
  background-image: url(../image/rock.png);
  height: 13px;
  width: 18px;
}

.rock2 {
  background-image: url(../image/rock2.png);
  height: 11px;
  width: 13px;
}

.grass {
  background-image: url(../image/grass.png);
  height: 9px;
  width: 40px;
}

.gravestone {
  background-image: url(../image/gravestone.png);
  height: 12px;
  width: 20px;
}

.gravestone2 {
  background-image: url(../image/gravestone2.png);
  height: 12px;
  width: 15px;
}

.grave-cross {
  background-image: url(../image/grave-cross.png);
  height: 10px;
  width: 13px;
}

.terrain-item {
  background-size: contain;
  bottom: auto;
  top: 0;
  /* rocks, graves, trees, barb wire etc., all go on top of things. */
  z-index: 11;
}

#battlefield .terrain-item.dynamically-added {
  transition: margin 0.75s ease-in-out;
  /* lay back in the cut, as it were. */
  z-index: 1;
}

body.edit-mode #battlefield .sprite.submerged,
body:not(.edit-mode) #battlefield .terrain-item.submerged,
body:not(.gravestones_helicopters) #battlefield .terrain-item.gs_helicopter,
body:not(.gravestones_infantry) #battlefield .terrain-item.gs_infantry,
body:not(.gravestones_vehicles) #battlefield .terrain-item.gs_vehicle {
  margin-top: 27px !important;
}

.left-arrow-sign,
.right-arrow-sign {
  background-image: url(../image/right-arrow-sign-mac.png);
  height: 25px;
  width: 28px;
  z-index: 2; /* ground units go in front of these */
}

#battlefield.snow .left-arrow-sign,
#battlefield.snow .right-arrow-sign {
  background-image: url(../image/right-arrow-sign-mac_snow.png);
}

.helicopter,
.helicopter.facing-left,
.helicopter.facing-right {
  height: 15px;
  overflow: hidden;
  width: 48px;
  z-index: 11; /* show on top of notifications, and landing pad - but not clouds. */
}

.helicopter .transform-sprite {
  animation: animate-transform-sprite-helicopter calc(0.52s * var(--gs-frac))
    steps(4) infinite;
  background-image: url(../image/helicopter-sprite-horizontal.png);
  background-size: 200px 15px;
  height: 15px;
  width: 200px;
}

.helicopter.facing-left .transform-sprite {
  /* new sprite */
  background-image: url(../image/helicopter-sprite-horizontal-facing-left.png);
}

.turret,
.turret .sub-sprite {
  background: url(../image/turret-sprite.png) 50% 0/18px 64px no-repeat;
  height: 15px;
  width: 22px;
  /* 18 + a few pixels for turret rotation */
  z-index: 2; /* sit atop bunkers */
}

.turret .sub-sprite {
  background-position: 50% -16px;
  height: 31px !important;
  top: -5px;
}

.turret:not(.destroyed):not(.firing):not(.exploding) .sub-sprite {
  animation: scan calc(2s * var(--gs-frac)) linear infinite alternate;
}

.turret:not(.firing):not(.exploding).engineer-interacting {
  animation: sorta-blink-subtle calc(1s * var(--gs-frac)) steps(8) infinite;
}

.turret.destroyed {
  background: 0 0;
}

.turret.destroyed .sub-sprite {
  background-position: 50% 100%;
  bottom: 0;
  height: 3px !important;
  /* bottom-align dead sprite */
  top: auto;
}

.bomb {
  bottom: auto;
  height: 6px;
  left: 0;
  position: absolute;
  top: 0;
  width: 14px;
  z-index: 2;
}

.bomb .sub-sprite {
  background-image: url(../image/bomb.png);
  background-position: 0 0;
  background-size: 14px 6px;
}

.bomb.spark .sub-sprite,
.bomb.spark-2 .sub-sprite {
  animation: none;
}

.bomb.spark .sub-sprite,
.bomb.spark-2 .sub-sprite,
.gunfire.spark,
.gunfire.spark-2,
.smart-missile.spark,
.smart-missile.spark-2 {
  background-image: url(../image/explosion-spark.png);
  background-position: 0 0;
  background-size: contain;
  height: 5px;
  width: 5px;
}

.bomb.spark-2 .sub-sprite,
.gunfire.spark-2,
.smart-missile.spark-2 {
  background-image: url(../image/explosion-spark-2.png);
}

.gunfire.spark,
.gunfire.spark-2,
.smart-missile.spark,
.smart-missile.spark-2 {
  background-color: transparent;
  z-index: 5;
}

#battlefield .bomb.spark,
#battlefield .gunfire.spark.dead,
#battlefield .bomb.spark-2,
#battlefield .gunfire.spark-2.dead {
  /* nice fade for sparks */
  transition: opacity 0.25s ease-in;
  transition-delay: 0.5s;
  opacity: 0;
}

#battlefield .sprite.explosion-classic,
#battlefield .sprite.explosion-classic-2 {
  background: 0 0;
  width: 56px;
  height: 22px;
  margin-left: 0;
  margin-top: 0;
  filter: drop-shadow(
    0 calc(-0.25px * var(--gs)) calc(1.5px * var(--gs)) #cc3333
  );
}

#battlefield .sprite.explosion-classic .sub-sprite,
#battlefield .sprite.explosion-classic-2 .sub-sprite {
  background-image: url(../image/explosion-large.png);
  animation: classic-explosion calc(0.4s * var(--gs-frac)) steps(5);
  /* default when animation finishes */
  animation-fill-mode: forwards;
  top: 0;
  left: 0;
  bottom: auto;
  width: 100%;
  height: 500%;
  /* this element had better have the right aspect ratio. :X */
  background-size: 100% 100%;
  background-position: 0 0;
}

#battlefield .sprite.explosion-classic-2 .sub-sprite {
  background-image: url(../image/explosion-large-2.png);
}

.bomb.explosion-large {
  background: 0 0;
  height: 56px;
  margin-left: 0;
  margin-top: -32px;
  transform-origin: 50% 100%;
  width: 51px;
}

.bomb.explosion-large .sub-sprite {
  animation: largeexplosion calc(0.66s * var(--gs-frac)) steps(10);
  /**
   * "Dirt Explosion" by SrGrafo on DeviantArt
   * https://www.deviantart.com/srgrafo/art/Dirt-Explosion-774442026
   */
  background-image: url(../image/deviantart-Dirt-Explosion-774442026_1024x112.webp);
  background-position: 0 0;
  background-size: 512px 51px;
  height: 51px;
  /* default state */
  transform: translate3d(-512px, 0, 0);
  width: 512px;
}

body:not(.game-over).radar_jammed #radar {
  /* TODO: review, $$$? */
  /* exception: allow the radar to show, even if jammed, when the game is over. */
  /* opacity should be fast, performance-wise, and smooth. */
  opacity: 0;
}

/*
body:not(.is-mobile):not(.game-over).radar_enhanced_fx.radar_jammed
  #battlefield {
*/
/**
   * This number is affected by transforms, but not zoom-based scaling.
   * Therefore, offset this filter using the transform scale (if set.)
   *
   * Note: Excluding mobile - this might hit performance on iOS Safari
   * when lots of radar scan nodes and sprites are on the screen.
   */
/* filter: blur(calc(1px * (1 / var(--gs)))); */
/*
}

*/
/*
body:not(.is-mobile):not(.game-over).radar_enhanced_fx.radar_jammed.is_firefox
  #battlefield {
*/
/* firefox seems to be more aggressive with the blur stuff; it's both literally and metaphorically unclear. :D */
/* filter: blur(calc(0.33px * (1 / var(--gs)))); */
/*
}

*/

.bunker.exploding,
.helicopter.exploding,
.missile-launcher.exploding,
.tank.enemy.exploding,
.tank.exploding,
.turret.exploding,
.van.exploding {
  animation: explosionshrapnel2 calc(1s * var(--gs-frac)) steps(12);
  /* give the first frame a little more time */
  animation-delay: 0.1s;
  animation-fill-mode: forwards;
  /* Stay on last frame when finished */
  background-image: url(../image/explosion-shrapnel-2.png);
  background-position: 0 -384px;
  /* default state */
  background-repeat: no-repeat;
  background-size: auto;
  height: 32px;
  width: 79px;
}

.tank.exploding {
  margin-left: -11px;
  /* align with where tank was */
  margin-top: -12px; /* offset for 57-pixel-wide normal tank */
}

.helicopter.exploding,
.missile-launcher.exploding,
.turret.exploding,
.van.exploding {
  /* align with where unit was */
  margin-top: -16px;
}

.bunker.exploding {
  animation: none;
  /* special case */
  background-image: none;
}

.bunker.burning,
.bunker.exploding {
  height: 112px;
  /* bunker is normally 52px */
  margin-left: -30px;
  margin-top: -87px;
  width: 112px;
  z-index: 5;
  /* let nuke show on top of smoke */
  filter: drop-shadow(0 calc(-0.25px * var(--gs)) calc(1.5px * var(--gs)) #fff);
  transition: filter 0.5s ease-in-out;
}

.base.burning {
  /* a little "nuclear" glow, why not. */
  filter: drop-shadow(0 0 calc(8px * var(--gs)) #fff);
  transition: filter 0.5s ease-in-out;
  width: 103px;
  height: 103px;
  margin-top: -77px;
}

/* special case */
.base .sub-sprite.nuke,
.bunker .sub-sprite.nuke {
  /**
   * Commercial, licensed asset - $1.99 USD.
   * https://infectedtribe.itch.io/pixel-explosion
   * 96 x 71 x 16 frames, 100 ms per frame. spritesheet dimensions: 1536 x 71
   * https://graphicriver.net/item/pixel-explosion-set/15457666
   */
  background-image: url(../image/infectedtribe_itch_io-pixel_explosion.png);
  background-position: 112px 0;
  background-repeat: no-repeat;
  background-size: 2352px 112px;
  margin-top: -2px;
  visibility: hidden;
  z-index: 3;
}

.bunker .sub-sprite.nuke {
  transform: scale3d(0.88, 0.88, 1);
  transform-origin: 50% 100%;
}

.base.burning .sub-sprite.nuke,
.bunker.burning .sub-sprite.nuke,
.bunker.exploding .sub-sprite.nuke {
  /* go go go! */
  animation: nuke calc(1.5s * var(--gs-frac)) steps(21);
  animation-fill-mode: forwards;
  visibility: visible;
}

.turret.exploding {
  /* adjust for larger explosion sprite */
  margin-left: -30.5px;
}

.van.exploding {
  /* 32px -> 79px */
  margin-left: -28px;
}

/* new "generic" explosion */
.ephemeral-explosion {
  animation: ephemeralexplosion calc(0.75s * var(--gs-frac)) steps(14);
  animation-fill-mode: forwards;
  /* Stay on last frame when finished */
  background-image: url(../image/explosion_by_tungkann_dam5o19.png);
  background-position: 0 0;
  /* default state */
  background-repeat: no-repeat;
  background-size: 1400px 100px;
  height: 100px;
  left: 0;
  position: absolute;
  top: 0;
  transform: translate3d(-50%, -50%, 0) scale3d(0.5, 0.5, 1);
  transform-origin: 50% 100%;
  /* bottom-align */
  width: 100px;
  z-index: 3;
}

.sprite .energy-status {
  background-color: #3c3;
  border: 0.25px solid #000;
  border-radius: 1px;
  bottom: 0;
  font-size: 0;
  height: 1px;
  left: 0;
  opacity: 0;
  position: absolute;
  transition: all calc(0.2s * var(--gs-frac)) ease-out;
  transition-property: width, height, left, background-color, opacity;
  width: 100%;
  z-index: 2;
}

.sprite.tank .energy-status {
  bottom: 1px;
}

.sprite.balloon .energy-status {
  /* pull down slightly, and make more visible */
  bottom: -1px;
  height: 1.5px;
}

.sprite.parachute-infantry .energy-status {
  height: 0.5px;
}

.sprite.super-bunker .energy-status {
  /* special case: improve legibility */
  bottom: auto;
  height: 1.5px;
  top: 3.25px;
}

.helicopter.facing-left .energy-status,
.sprite.enemy .energy-status {
  /* right-align on certain units, i.e., flipped helicopter w/custom width */
  left: auto;
  right: 0;
}

.sprite .sub-sprite {
  bottom: 0;
  height: 100%;
  left: 0;
  /* explosion / burning overlays */
  position: absolute;
  width: 100%;
}

.cornholio {
  /* I am the great Cornholio! */
  display: none;
}

.bunker.burning .sub-sprite.rubble-container,
.bunker.exploding .sub-sprite.rubble-container {
  bottom: 0;
  height: 8px;
  left: 50%;
  margin-left: -26px;
  overflow: hidden;
  top: auto;
  /* always stay centered relative to bunker (larger when exploding etc.) */
  width: 52px;
}

.bunker.burning .sub-sprite.rubble,
.bunker.exploding .sub-sprite.rubble {
  animation: burninating calc(0.5s * var(--gs-frac)) steps(4) infinite;
  background-image: url(../image/bunker-burning-sprite-horizontal.png);
  background-position: 0 0;
  background-repeat: no-repeat;
  bottom: 0;
  height: 9px;
  left: 0;
  position: absolute;
  /* transition duration set via JS */
  transition: opacity;
  /* 53px * 4 frames */
  width: 212px;
}

.bunker.burning-out .sub-sprite.rubble {
  /* gradually hide the burning bits */
  opacity: 0;
}

.bunker.burning,
.bunker.dead {
  background-image: url(../image/bunker-dead.png);
  background-position: 50% 100%;
  display: block;
  /* room for burning animation */
  height: 9px;
  margin-left: 0;
  /* to get 25px height, align with bottom */
  margin-top: 16px;
  width: 53px;
}

.sprite.flame {
  background-image: url(../image/tank_flame.png);
  background-size: contain;
  height: 18px;
  width: 32px;
}

.sprite.missile-launcher.building,
.sprite.tank.building {
  margin-top: 18px;
}

.sprite.van.building {
  margin-top: 16px;
}

.sprite.engineer.building,
.sprite.infantry.building {
  margin-top: 11px;
}

.sprite.ordering {
  contain: layout;
  /* TODO: remove margin-bottom once all bottom-aligned things are out */
  margin-bottom: 0 !important;
  margin-top: 0 !important;
  transition: margin 2s; /* override .building rules */
}

.sprite.recycling {
  /* units drop "below", in reverse of ordering */
  /* (when applied as .building.recycling) */
  transition: margin 2s;
}

#battlefield .scan-node {
  border-style: dotted;
}

#battlefield .sprite .scan-node {
  background-color: transparent;
  border-color: rgba(0, 255, 0, 0.15);
  background-image: radial-gradient(
    circle,
    rgba(0, 255, 0, 0) 0,
    rgba(0, 255, 0, 0) 65%,
    rgba(0, 255, 0, 0.15) 75%
  );
  /* render background at double-height, given semicircle shape */
  background-size: 100% 200%;
  background-position: 50% 0;
}

#battlefield .sprite.enemy .scan-node {
  border: 0.5px dotted rgba(255, 255, 255, 0.15);
  /**
   * Numerous "steps", with zero transition between different colours.
   * https://www.kirupa.com/animations/radial_gradient_stripes.htm
   */
  background-image: radial-gradient(
    circle,
    rgba(255, 255, 255, 0) 0,
    rgba(255, 255, 255, 0) 65%,
    rgba(255, 255, 255, 0.15) 75%
  );
  background-size: 100% 200%;
}

.cloud1,
.cloud2,
.cloud3 {
  background-position: 0 0;
  background-repeat: no-repeat;
  background-size: contain;
  left: 0;
  top: 0;
  /* clouds hide helicopters. */
  z-index: 12;
}

.cloud1 {
  background-image: url(../image/cloud-1.png);
  height: 29px;
  width: 102px;
}

.cloud2 {
  background-image: url(../image/cloud-2.png);
  height: 28px;
  width: 116px;
}

.cloud3 {
  background-image: url(../image/cloud-3.png);
  height: 34px;
  width: 125px;
}

#stats-endgame {
  display: none;
  left: 50%;
  margin-left: -11em;
  margin-top: 13em;
  position: absolute;
  width: 22em;
}

#stats-endgame table {
  border: 1px solid #090;
  color: #eee;
  width: 100%;
}

#stats-endgame table td,
#stats-endgame table th {
  background-color: rgba(0, 153, 0, 0.25);
  border-left: 1px solid #090;
  min-width: 2em;
  padding: 0.25em 0.33em;
}

#stats-endgame table thead th {
  padding: 0.25em;
}

#stats-endgame table thead th:first-of-type {
  background-color: transparent;
  border-color: transparent;
}

#stats-endgame table td {
  border-top: 1px solid #090;
}

#stats-endgame table td:first-of-type,
#stats-endgame table th:first-of-type {
  border-left-color: transparent;
}

#game-tips {
  position: absolute;
  font-family: 'Cheddar Gothic Stencil';
  font-weight: 400;
  /* will be repositioned higher up on small portrait screens. */
  top: 23.5%;
  left: 0;
  width: 100%;
  height: 0;
  pointer-events: none;
  /* tips, announcements, and game paused / resume prompts. */
  font-size: calc(18px * var(--gs));
  line-height: 100%;
}

#game-tips .tips-container {
  border-radius: 1em;
  color: #707070;
  display: none;
  left: 50%;
  overflow: hidden;
  padding: 0;
  position: absolute;
  text-shadow: 0 1px 0 #000;
  top: 0;
  transform: translate3d(-50%, 0, 0);
  width: 65%;
}

body.game-over #game-tips .tips-container {
  top: 30%;
}

#game-paused {
  color: #ccc;
  display: none;
  font-size: calc(24px * var(--gs));
  margin-top: 10vw;
  font-weight: 300;
  left: 0;
  position: absolute;
  text-align: center;
  text-shadow: 0 1px 0 #000;
  top: 0;
  width: 100%;
  z-index: 10;
}

#game-paused p {
  margin-top: -0.25rem;
  padding: 0.25rem 0.5rem;
}

body.game-paused #game-tips .tips-container {
  /* hide, vs. display: none which will reset CSS animations. */
  visibility: hidden;
}

body.game-paused #game-tips .tips-container .animation-node,
body.game-paused #game-tips .tips-container .tip {
  /* pause tip scrolling effect */
  animation-play-state: paused;
}

body.game-paused #game-paused {
  display: block;
}

body.game-paused.game-menu-open #game-paused,
body.game-paused.prefs-modal-open #game-paused {
  /* hide even when paused, in certain cases. */
  display: none;
}

#game-tips .tips-container #game-tips-list {
  display: inline-block;
  width: 100%;
  margin: 0;
  opacity: 1;
  overflow: hidden;
  padding: 0;
  position: relative;
  transition: opacity 0.2s ease-in-out;
  white-space: nowrap;
}

body.game-started #game-tips.active .tips-container {
  display: block;
  /**
   * gradient generated via this useful tool...
   * cssmatic.com/gradient-generator#'\-moz\-linear\-gradient\%28left\%2C\%20rgba\%280\%2C0\%2C0\%2C1\%29\%205\%25\%2C\%20rgba\%280\%2C0\%2C0\%2C0\%29\%2020\%25\%2C\%20rgba\%280\%2C0\%2C0\%2C0\%29\%2050\%25\%2C\%20rgba\%280\%2C0\%2C0\%2C0\%29\%2080\%25\%2C\%20rgba\%280\%2C0\%2C0\%2C1\%29\%2095\%25\%29\%3B'
   *
   * 11/2023: webkit prefix may apply for some time to come; dropped as of Chrome 120.
   * https://caniuse.com/css-masks
   */
  -webkit-mask-image: linear-gradient(
    90deg,
    transparent 0,
    #000 10%,
    #000 90%,
    transparent
  );
  mask-image: linear-gradient(
    90deg,
    transparent 0,
    #000 10%,
    #000 90%,
    transparent
  );
}

#game-tips .tips-container .animation-node,
#game-tips .tips-container .tip {
  animation: scrollText calc(24s * var(--gs-frac)) linear;
  font-weight: 300;
  padding: 1px;
  text-rendering: optimizeSpeed; /* "ticker-tape" style? */
  /* animation-timing-function: steps(150); */
}

body.is_iphone #game-tips .tips-container .animation-node,
body.is_iphone #game-tips .tips-container .tip {
  /* a little faster, animation-wise. */
  animation-duration: calc(16s * var(--gs-frac));
}

/* go bigger on landscape. */
#game-tips .tips-container .animation-node {
  height: 0;
  left: 0;
  /* used to trigger `onanimationend()` events for tip display. */
  position: absolute;
  top: -1px;
  visibility: hidden;
}

#game-tips .tips-container .animation-node:not(.hide-on-mobile),
#game-tips .tips-container .tip:not(.hide-on-mobile) {
  display: inline-block;
  min-width: 32rem;
  /* each tip should roughly clear the screen before the next appears. */
  width: 125%;
}

#game-tips #game-announcements {
  color: #bbb;
  font-size: calc(20px * var(--gs));
  line-height: 110%;
  font-weight: 300;
  left: 0;
  margin: 0 auto;
  opacity: 0;
  position: absolute;
  text-align: center;
  top: -0.5em;
  filter: blur(3px);
  transform: scale3d(1.2, 1.2, 1);
  transform-origin: 50% 50%;
  transition: all calc(0.5s * var(--gs-frac)) ease-in-out;
  transition-property: filter, opacity, transform;
  width: 100%;
  /* display on top of "TV." */
  z-index: 2;
  text-shadow: 0 1px 1px #000;
}

#game-tips #game-announcements p {
  overflow: visible;
  white-space: normal;
}

#game-tips #game-announcements img {
  vertical-align: middle;
}

/* TODO: review and remove */
#game-tips #game-announcements span:not(.hide-on-mobile):not(.inline-emoji) {
  display: block;
  width: 100%;
}

#game-tips #game-announcements .inline-emoji {
  /* font may be required for consistent alignment on iOS Safari. :X */
  font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto,
    Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  line-height: 1em;
  vertical-align: middle;
}

/* ugh, Firefox. */
body.is_firefox #game-tips #game-announcements .inline-emoji {
  position: relative;
  vertical-align: baseline;
  top: -0.05em;
}

#game-tips.has-announcement .tips-container {
  overflow: visible;
}

#game-tips.has-announcement #game-tips-list {
  opacity: 0;
}

#game-tips.has-announcement #game-announcements {
  transition-delay: 667ms;
  opacity: 1;
  transform: scale3d(1, 1, 1);
  filter: none;
}

body.game-paused #game-announcements {
  visibility: hidden;
}

#help a {
  color: #090;
  text-decoration: none;
}

#help a.static {
  display: inline;
}

#help a:hover {
  color: #fff;
}

#help a.start,
#help.inactive a.start {
  display: inline;
}

/* "Green line" mode */
#world.x-ray .sprite {
  background: 0 0 !important;
  outline: #393 solid 1px;
}

#player-status-bar .spacer {
  /* centering / sizing shenanigans */
  left: calc(-4px * var(--gs));
  padding-right: calc(5px * var(--gs));
  position: relative;
  /* previously */
  /* min-width: 5% */
  width: calc(32px * var(--gs));
}

#player-status-bar span.letter-block {
  background-clip: padding-box;
  background: rgba(32, 32, 32, 0.75);
  border: calc(0.5px * var(--gs)) solid rgba(48, 48, 48, 0.33);
  border-radius: calc(2px * var(--gs));
  color: #777;
  display: inline-block;
  height: calc(10px * var(--gs));
  line-height: calc(10px * var(--gs));
  margin-top: calc(-1px * var(--gs));
  min-width: calc(6px * var(--gs));
  padding: 0 calc(3px * var(--gs));
  text-align: center;
  vertical-align: middle; /* align with nearby text, e.g., bomb count */
}

#player-status-bar .inventory-item a {
  background-repeat: no-repeat;
  background-size: contain;
  display: inline-block;
  /* annoying vertical alignment fix */
  margin-top: -1px;
  vertical-align: middle;
  /* these shouldn't be clickable, despite being a link. :X */
  pointer-events: none;
  /* scale these up. */
  zoom: var(--gs);
}

#mobile-controls li.inventory-item a.missile-launcher,
#player-status-bar .inventory-item a.missile-launcher,
.static-sprite.missile-launcher {
  background-image: url(../image/missile-launcher-static.png);
}

#mobile-controls.enemy li.inventory-item a.missile-launcher,
#player-status-bar.enemy .inventory-item a.missile-launcher {
  background-image: url(../image/missile-launcher-enemy-static.png);
}

#player-status-bar .inventory-item a.missile-launcher {
  background-position: 50% 50%;
  background-size: contain;
  height: 9px;
  width: 27px;
}

#mobile-controls li.inventory-item a.tank,
#player-status-bar .inventory-item a.tank,
.static-sprite.tank {
  /* TODO: replace with new asset */
  background-image: url(../image/tank-static.png);
}

#mobile-controls.enemy li.inventory-item a.tank,
#player-status-bar.enemy .inventory-item a.tank {
  background-image: url(../image/tank-enemy-static.png);
}

#player-status-bar .inventory-item a.tank {
  background-size: contain;
  height: 9px;
  width: 29px;
}

#mobile-controls li.inventory-item a.van,
#player-status-bar .inventory-item a.van,
.static-sprite.van {
  background-image: url(../image/van-static.png);
}

#mobile-controls.enemy li.inventory-item a.van,
#player-status-bar.enemy .inventory-item a.van {
  background-image: url(../image/van-enemy-static.png);
}

#player-status-bar .inventory-item a.van {
  background-size: contain;
  height: 9px;
  width: 22px;
}

#mobile-controls li.inventory-item a.infantry,
#player-status-bar .inventory-item a.infantry,
.static-sprite.infantry {
  background-image: url(../image/infantry-static.png);
}

#mobile-controls.enemy li.inventory-item a.infantry,
#player-status-bar.enemy .inventory-item a.infantry {
  background-image: url(../image/infantry-enemy-static.png);
}

#player-status-bar .inventory-item a.engineer,
#player-status-bar .inventory-item a.infantry,
.static-sprite.engineer {
  background-size: contain;
  height: 9px;
  width: 8px;
}

#player-status-bar .inventory-item a.engineer {
  background-image: url(../image/engineer-static.png);
}

#player-status-bar.enemy .inventory-item a.engineer {
  background-image: url(../image/engineer-enemy-static.png);
}

#player-status-bar a {
  /* inventory ordering */
  filter: grayscale(0);
  transition: filter 0.33s ease-out, opacity 0.33s ease-out;
}

#player-status-bar.can-not-order-engineer .engineer,
#player-status-bar.can-not-order-infantry .infantry,
#player-status-bar.can-not-order-missile-launcher .missile-launcher,
#player-status-bar.can-not-order-tank .tank,
#player-status-bar.can-not-order-van .van {
  filter: grayscale(1);
  opacity: 0.5;
}

body:not(.is-mobile) .mobile-only {
  display: none;
}

#notification-toasts {
  position: absolute;
  overflow: hidden;
  contain: strict;
  /**
   * Positioning: try to avoid overlapping a few other common
   * composited elements "all the time" (tips / shadow overlays),
   * which guarantees this becomes another full-screen GPU layer.
   */
  height: 54%;
  right: 2.05%;
  top: 32.5%;
  width: 25em;
  font-size: calc(6px * var(--gs));
  line-height: 150%;
  /* sit on top of L/R screen gradients */
  z-index: 11;
  pointer-events: none;
}

#notification-toasts.left-aligned {
  right: auto;
  left: 2.05%;
}

#notification-toasts.bottom-up {
  display: flex;
  align-items: flex-end;
  flex-direction: column;
  justify-content: end;
}

.notification-toast {
  color: #aaa;
  opacity: 0;
  position: relative;
  text-align: right;
  top: 0;
  transition: 0.5s ease-in-out;
  transition-property: max-height, height, margin, opacity;
  overflow-y: hidden;
  /* max-height as an expand/collapse feature. :tada: */
  max-height: 0;
  text-shadow: 0.5px 0.5px rgba(0, 0, 0, 0.75);
}

#notification-toasts.left-aligned .notification-toast {
  width: 100%;
  text-align: left;
}

.notification-toast.toast-active {
  opacity: 1;
  /* sneaky: transition in. This "should" cover two lines. */
  max-height: 3em;
}

.notification-toast.toast-expiring {
  opacity: 0;
  /* easy collapse! */
  max-height: 0;
}

.notification-toast > span {
  /* don't apply to inline emoji, etc. */
  display: inline-block;
  padding-bottom: calc(4px * var(--gs));
}

#queue .fraction,
.notification-toast .fraction {
  /* "slash" character */
  font-size: calc(2px * var(--gs));
  font-style: normal;
}

#queue sup,
.notification-toast sup.nsf {
  font-size: 75%;
  /* pull closer to text at left */
  margin-left: -1.5px;
  position: relative;
  right: -1px;
  /* super-script: closer to fraction "slash" */
  top: 1px;
}

.notification-toast sup:not(.nsf) {
  /* bump out a bit, e.g., tank[3] - multiple tanks being ordered */
  padding-left: 0.5px;
}

#queue span.fraction-wrapper {
  /* left: -15%; */
  /* building queue: nudge a little */
  position: relative;
}

#queue .queue-item.has-counter .fraction-wrapper {
  /* hackish - so numbers don't overlap */
  position: absolute;
  top: 0;
  left: 0;
  margin: -66% 0 0 -33%;
  display: inline-block;
  transform: scale3d(0.9, 0.9, 1);
  font-size: calc(5px * var(--gs));
  line-height: 1em;
}

body.is_firefox #queue .queue-item.has-counter .fraction-wrapper {
  /* I suspect "all webkit" is fine, but Firefox needs less margin here. */
  margin-top: -25%;
}

#queue .queue-item.has-counter.over-ten .fraction-wrapper {
  /* hackish - so numbers don't overlap */
  display: inline-block;
  transform: scale3d(0.75, 0.75, 1);
}

#queue sub,
.notification-toast sub.nsf {
  font-size: 75%;
  left: -1px;
  position: relative;
  /* sub-script: closer to fraction "slash" */
  top: -1px;
}

#queue sub,
#queue sup {
  font-size: 65%;
}

#queue sup {
  left: 0.5px;
  margin-left: 0;
}

#queue sub {
  left: -0.5px;
}

#queue .fraction {
  font-size: calc(5px * var(--gs));
}

.zone-post {
  background: #875400;
  border-radius: 1px;
  bottom: 0;
  contain: layout !important;
  height: 6px;
  margin-bottom: -1px;
  margin-left: -1px;
  overflow: visible !important;
  width: 2px;
}

.zone-flag,
.zone-post {
  pointer-events: none;
  z-index: 4;
}

.zone-flag {
  background: rgba(0, 192, 0, 0.75);
  border: 0.5px solid hsla(0, 0%, 100%, 0.1);
  border-radius: 1px;
  font-size: 4px;
  left: 0;
  line-height: 4px;
  padding: 1px;
  position: absolute;
  text-align: center;
  top: 0;
  vertical-align: middle;
}

.sprite.infantry .zone-flag {
  font-size: 3px;
}

.zone-post .zone-flag {
  font-size: 6px;
  left: 50%;
  line-height: 6px;
  padding: 1px 3px;
  top: 0;
  transform: translate3d(-50%, -100%, 0);
}

.target-dot {
  background: #c00;
  border: 0.5px solid #000;
  border-radius: 2px;
  height: 2px;
  right: 0;
  width: 2px;
}

.tank .target-dot {
  top: 1px;
}

.target-marker {
  background: #c00;
  border-bottom: 0 solid transparent;
  border-bottom-left-radius: 0.5px;
  border-bottom-right-radius: 0.5px;
  --height: calc(2px * var(--gs));
  height: var(--height);
  margin-bottom: calc(var(--height) / 2);
  position: absolute;
  top: auto;
  bottom: 0;
  margin-bottom: calc(var(--height) * -1.5);
  left: 0;
  opacity: 0;
  transition: opacity 0.25s ease-in-out;
  will-change: transform;
}

.target-marker.transition-active {
  /* set while repositioning, moving to a new target */
  transition-property: width, opacity;
}

.sprite.dead .target-ui,
.sprite.exploding .target-ui,
.target-ui.disabled,
body.game-over .target-ui,
body.radar_jammed .scan-node {
  opacity: 0;
}

body.radar_jammed .target-marker {
  /* need to override inline style :X */
  opacity: 0 !important;
}

body.radar_jammed .scan-node {
  /* fade out, relatively quickly */
  transition-duration: 0.5s;
}

@keyframes drop-in {
  0% {
    opacity: 0;
    transform: translate3d(-50%, -50%, 0) scale3d(1.25, 1.25, 1);
  }

  to {
    opacity: 1;
    transform: translate3d(-50%, -50%, 0) scale3d(0.75, 0.75, 1);
  }
}

@keyframes drop-in-small {
  0% {
    opacity: 0;
    transform: translate3d(-50%, -50%, 0) scale3d(1, 1, 1);
  }

  to {
    opacity: 1;
    transform: translate3d(-50%, -50%, 0) scale3d(0.15, 0.15, 1);
  }
}

@keyframes tracking-active {
  0%,
  to {
    transform: translate3d(-50%, -50%, 0) scale3d(0.75, 0.75, 1);
  }

  50% {
    transform: translate3d(-50%, -50%, 0) scale3d(0.33, 0.33, 1);
  }
}

@keyframes parachute-swing {
  0% {
    transform: rotate3d(0, 0, 1, -12.5deg);
  }

  to {
    transform: rotate3d(0, 0, 1, 12.5deg);
  }
}

@keyframes scrollText {
  0% {
    transform: translate3d(0, 0, 0);
  }

  to {
    transform: translate3d(-100%, 0, 0);
  }
}

@keyframes scrollText-safari-scale {
  0% {
    transform: translate3d(0, 0, 0) scale(0.5, 0.5);
  }

  to {
    transform: translate3d(-100%, 0, 0) scale(0.5, 0.5);
  }
}

@keyframes ephemeralexplosion {
  0% {
    background-position: 0 0;
  }

  to {
    background-position: -1400px 0;
  }
}

@keyframes burninating {
  0% {
    transform: translate3d(0, 0, 0);
  }

  to {
    transform: translate3d(-100%, 0, 0);
  }
}

@keyframes bomb {
  0% {
    background-position: 0 0;
  }

  to {
    background-position: 0 -33px;
  }
}

@keyframes bomb-rotate {
  0% {
    transform: rotate(-90deg);
  }

  to {
    transform: rotate(0);
  }
}

@keyframes largeexplosion {
  0% {
    transform: translate3d(0, 0, 0);
  }

  to {
    transform: translate3d(-512px, 0, 0);
  }
}

@keyframes explosionshrapnel2 {
  0% {
    background-position: 0 0;
  }

  to {
    background-position: 0 -384px;
  }
}

@keyframes blink {
  0%,
  100% {
    opacity: 1;
  }

  50% {
    opacity: 0;
  }
}

@keyframes blink-bg {
  50% {
    background-color: #fff;
    opacity: 0.75;
  }
}

@keyframes blink-tracking-color {
  50% {
    background-color: red;
    border-color: red;
    color: red;
  }
}

@keyframes sorta-blink {
  50% {
    opacity: 0.65;
    transform: scale3d(1.1, 1.1, 1.1);
  }
}

@keyframes sorta-blink-alt {
  50% {
    background-color: rgba(27, 107, 27, 0.5);
    transform: scale3d(0.9, 0.9, 0.9);
  }
}

@keyframes sorta-blink-subtle {
  50% {
    opacity: 0.5;
    filter: grayscale(1);
  }
}

@keyframes flipleft {
  0% {
    background-position: 0 0;
  }

  to {
    background-position: 0 -60px;
  }
}

@keyframes flipright {
  0% {
    background-position: 0 -40px;
  }

  to {
    background-position: 0 20px;
  }
}

@keyframes scan {
  0% {
    transform: rotate(-90deg);
  }

  to {
    transform: rotate(90deg);
  }
}

@keyframes animate-transform-sprite-tank {
  0% {
    transform: translate3d(0, 0, 0);
  }

  to {
    transform: translate3d(-174px, 0, 0);
  }
}

@keyframes animate-transform-sprite-infantry {
  0% {
    transform: translate3d(0, 0, 0);
  }

  to {
    transform: translate3d(-55px, 0, 0);
  }
}

@keyframes animate-transform-sprite-engineer {
  0% {
    transform: translate3d(0, 0, 0);
  }

  to {
    transform: translate3d(-50px, 0, 0);
  }
}

@keyframes animate-transform-sprite-helicopter {
  /* is translate vs. translate3d() any better? */
  0% {
    transform: translate3d(0, 0, 0);
  }

  to {
    transform: translate3d(-200px, 0, 0);
  }
}

@keyframes animate-transform-sprite-helicopter-enemy {
  0% {
    transform: translate3d(0, 0, 0);
  }

  to {
    transform: translate3d(-220px, 0, 0);
  }
}

@keyframes animate-transform-sprite-base {
  0% {
    transform: translate3d(0, 0, 0);
  }

  to {
    transform: translate3d(-100%, 0, 0);
  }
}

@keyframes animate-transform-sprite-base-snow {
  0% {
    transform: translate3d(0, 0, 0);
  }

  to {
    transform: translate3d(-510px, 0, 0);
  }
}

@keyframes animate-transform-sprite-base-burning {
  0% {
    transform: translate3d(0, 0, 0);
  }

  to {
    transform: translate3d(-100%, 0, 0);
  }
}

@keyframes animate-transform-sprite-landing-pad {
  0% {
    transform: translate3d(0, 0, 0);
  }

  to {
    transform: translate3d(-324px, 0, 0);
  }
}

/* small */
@keyframes genericexplosionsmall {
  from {
    background-position: 0 0;
  }

  to {
    background-position: 0 100%;
  }
}

@keyframes balloonright {
  0% {
    background-position: 0 0;
  }

  to {
    background-position: 0 -128px; /* original yellow version: 0px -135px */
  }
}

@keyframes balloonleft {
  0% {
    background-position: 0 -128px; /* original yellow version: 0px -120px */
  }

  to {
    background-position: 0 0;
  }
}

@keyframes rotating3d {
  0% {
    transform: rotate3d(0, 0, 1, 0deg);
  }

  to {
    transform: rotate3d(0, 0, 1, 1turn);
  }
}

@keyframes pulse {
  0% {
    transform: scale3d(0.66, 0.66, 1);
  }

  to {
    transform: scale3d(0.33, 0.33, 1);
  }
}

@keyframes nuke {
  0% {
    background-position: 0 0;
  }

  to {
    background-position: -2352px 0;
  }
}
